export let triple;
$: { let svrxd_start = Date.now(); let svrxd_exec = rxdMakeid(4); let start_state = eval("$$self.$capture_state()"); rxdDsp('SvelteReactiveStart', {statement: "triple = count * 3;", filename: "", line: 0, id: "ABCD"}, svrxd_start, svrxd_exec, start_state); triple = count * 3; rxdDsp('SvelteReactiveEnd', {statement: "triple = count * 3;", filename: "", line: 0, id: "ABCD"}, svrxd_start, svrxd_exec, start_state, eval("$$self.$capture_state()")); }

function rxdDsp(type, detail, start_time, exec_id, start_state, end_state) {
    const ev = document.createEvent("CustomEvent");
    detail = detail || {};
    detail.start_time = start_time;
    detail.exec_id = exec_id;
    detail.start_state = rxdStringify(start_state);
    detail.end_state = rxdStringify(end_state);
    ev.initCustomEvent(type, false, false, detail);
    document.dispatchEvent(ev);
  };
function rxdMakeid(length) {
    var result = "";
    var characters = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
    var charactersLength = characters.length;
    for (var i = 0; i < length; i++) {
      result += characters.charAt(Math.floor(Math.random() * charactersLength));
    }
    return result;
  };
function rxdStringify(obj, replacer, spaces, cycleReplacer) {
  function serializer(replacer, cycleReplacer) {
    var stack = [], keys = []

    if (cycleReplacer == null) cycleReplacer = function(key, value) {
      if (stack[0] === value) return "[Circular ~]"
      return "[Circular ~." + keys.slice(0, stack.indexOf(value)).join(".") + "]"
    }

    return function(key, value) {
      if (stack.length > 0) {
        var thisPos = stack.indexOf(this)
        ~thisPos ? stack.splice(thisPos + 1) : stack.push(this)
        ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key)
        if (~stack.indexOf(value)) value = cycleReplacer.call(this, key, value)
      }
      else stack.push(value)

      return replacer == null ? value : replacer.call(this, key, value)
    }
  }


  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces)
};
rxdDsp('SvelteReactiveEnable', {version: "0.1.3"});
